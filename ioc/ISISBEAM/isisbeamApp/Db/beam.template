
record(ai, "$(P)AC:$(BEAM):BEAM:CURR")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn(isisbeam,0,0)$(PARAM)")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
   field(DESC, "$(BEAM) Beam Current")
   field(EGU, "uA")
   field(HOPR, "$(HOPR)")
   field(LOPR, "$(LOPR)")
   field(LOW, "$(LOW)")
#   field(LSV, "MINOR")
   field(SIOL, "10")
   field(SIML, "$(P)ISISBEAM:SIM")
   field(SDIS, "$(P)ISISBEAM:DISABLE")
   field(FLNK, "$(P)AC:$(BEAM):BEAM:CHCALC")
   field(ADEL, "0.1")
}

record(compress, "$(P)AC:$(BEAM):BEAM:CURR:AVG")
{
    field(INP, "$(P)AC:$(BEAM):BEAM:CURR CP")
    field(ALG, "N to 1 Average")
    field(N, "5")
    field(EGU, "uA")
    field(PREC, "3")
    field(HOPR, "$(HOPR)")
    field(LOPR, "$(LOPR)")
}

# last "beam on" current value
record(ai, "$(P)AC:$(BEAM):BEAM:CURR:LAST")
{
    field(EGU, "uA")
    field(ADEL, "0.1")
    field(PREC, "3")
    field(HOPR, "$(HOPR)")
    field(LOPR, "$(LOPR)")
}

record(compress, "$(P)AC:$(BEAM):BEAM:CURR:LAST:AVG")
{
    field(INP, "$(P)AC:$(BEAM):BEAM:CURR:LAST CP")
    field(ALG, "N to 1 Average")
    field(N, "5")
    field(EGU, "uA")
    field(PREC, "3")
    field(HOPR, "$(HOPR)")
    field(LOPR, "$(LOPR)")
}

record(calcout, "$(P)AC:$(BEAM):BEAM:LASTCALC")
{
    field(INPA, "$(P)AC:$(BEAM):BEAM:CURR CP")
    field(CALC, "A")
    field(OOPT,	"When Non-zero")
    field(OUT, "$(P)AC:$(BEAM):BEAM:CURR:LAST PP")
}

record(ai, "$(P)AC:$(BEAM):BEAM:CURR:_OLD")
{
}

# this version of base does not support assignment in calc expressions
record(calcout, "$(P)AC:$(BEAM):BEAM:CHCALC")
{
	field(INPA, "$(P)AC:$(BEAM):BEAM:CURR:_OLD NPP")
	field(INPB, "$(P)AC:$(BEAM):BEAM:CURR NPP")
	field(INPC, "$(IOC):HEARTBEAT NPP")
	field(CALC, "A#B?1:0")
    field(OOPT,	"When Non-zero")
	field(DOPT, "Use OCAL")
	field(OCAL, "C")
	field(OUT, "$(P)AC:$(BEAM):BEAMCH:ETIME PP")
    field(FLNK, "$(P)AC:$(BEAM):BEAM:_UPDOLD")
}

record(ao, "$(P)AC:$(BEAM):BEAM:_UPDOLD")
{
    field(DTYP, "Soft Channel")
	field(OMSL, "closed_loop")
    field(DOL, "$(P)AC:$(BEAM):BEAM:CHCALC.B NPP")
	field(OUT, "$(P)AC:$(BEAM):BEAM:CURR:_OLD PP")
    field(FLNK, "$(P)AC:$(BEAM):BEAM:ONCALC")
}

record(calcout, "$(P)AC:$(BEAM):BEAM:ONCALC")
{
	field(INPA, "$(P)AC:$(BEAM):BEAM:CURR NPP")
	field(CALC, "A>0?1:0")
    field(OOPT,	"On Change")
	field(DOPT, "Use OCAL")
	field(OCAL, "A>0?2:1")
	field(OUT, "$(P)AC:$(BEAM):BEAM:ONCALC:FAN.SELN PP")
}

record(fanout, "$(P)AC:$(BEAM):BEAM:ONCALC:FAN")
{
    field(SELM, "Specified")
	field(LNK1, "$(P)AC:$(BEAM):BEAMOFF:ETIME")
	field(LNK2, "$(P)AC:$(BEAM):BEAMON:ETIME")
}

record(longin, "$(P)AC:$(BEAM):BEAMCH:ETIME")
{
   field(DESC, "$(BEAM) Beam change Time")
   field(FLNK, "$(P)AC:$(BEAM):BEAMCH:TIME")
}

## time beam current value last changed
record(stringin, "$(P)AC:$(BEAM):BEAMCH:TIME")
{
   field(DESC, "$(BEAM) Beam Change Time")
   field(DTYP, "Soft Timestamp")
   field(INP, "@%Y-%m-%dT%H:%M:%S")
   field(PINI, "YES")
}

record(longin, "$(P)AC:$(BEAM):BEAMON:ETIME")
{
   field(DESC, "$(BEAM) Beam on Time")
   field(INP, "$(IOC):HEARTBEAT NPP")
   field(PINI, "YES")
}

record(longin, "$(P)AC:$(BEAM):BEAMOFF:ETIME")
{
   field(DESC, "$(BEAM) Beam off Time")
   field(INP, "$(IOC):HEARTBEAT NPP")
   field(PINI, "YES")
}

record(calcout, "$(P)AC:$(BEAM):BEAMOFF:DUR")
{
    field(DESC, "$(BEAM) Beam off duration")
	field(INPA, "$(P)AC:$(BEAM):BEAM:STAT NPP")
	field(INPB, "$(IOC):HEARTBEAT NPP")
	field(INPC, "$(P)AC:$(BEAM):BEAMOFF:ETIME NPP")
	field(CALC, "A = 0 ? (B - C) : 0")
    field(HIGH, "300")
#    field(HSV, "MINOR")
	field(SCAN, "1 second")
	field(EGU, "s")
}

record(calcout, "$(P)AC:$(BEAM):BEAMON:DUR")
{
    field(DESC, "$(BEAM) Beam on duration")
	field(INPA, "$(P)AC:$(BEAM):BEAM:STAT NPP")
	field(INPB, "$(IOC):HEARTBEAT NPP")
	field(INPC, "$(P)AC:$(BEAM):BEAMON:ETIME NPP")
	field(CALC, "A = 1 ? (B - C) : 0")
    field(LOW, "0")
#    field(LSV, "MINOR")
	field(SCAN, "1 second")
	field(EGU, "s")
}

## the comparison in CALC is how long a state (off or on) needs to have existed before
## we treat it as the new norm. This should take account of the polling frequence defined 
## by isisbeamConfigure() in st.cmd. Currently we poll every 3 seconds, so 5 seconds
## means that two successive polls must agree
record(calcout, "$(P)AC:$(BEAM):BEAM:ONCALC2")
{
	field(INPA, "$(IOC):HEARTBEAT NPP")
	field(INPB, "$(P)AC:$(BEAM):BEAMON:ETIME NPP")
	field(INPC, "$(P)AC:$(BEAM):BEAMOFF:ETIME NPP")
	field(INPD, "$(P)AC:$(BEAM):BEAM:ONCALC NPP")
	field(CALC, "(A - MAX(B,C)) > 5")
    field(OOPT,	"Transition To Non-zero")
	field(DOPT, "Use OCAL")
	field(OCAL, "D>0?2:1")
	field(OUT, "$(P)AC:$(BEAM):BEAM:ONCALC2:FAN.SELN PP")
	field(SCAN, "1 second")
}

record(fanout, "$(P)AC:$(BEAM):BEAM:ONCALC2:FAN")
{
    field(SELM, "Specified")
	field(LNK1, "$(P)AC:$(BEAM):BEAMOFF:TIME")
	field(LNK2, "$(P)AC:$(BEAM):BEAMON:TIME")
}

record(stringin, "$(P)AC:$(BEAM):BEAMON:TIME")
{
   field(DESC, "$(BEAM) Beam on Time")
   field(DTYP, "Soft Timestamp")
   field(INP, "@%Y-%m-%dT%H:%M:%S")
   field(FLNK, "$(P)AC:$(BEAM):BEAM:STAT")
   field(PINI, "YES")
}

record(stringin, "$(P)AC:$(BEAM):BEAMOFF:TIME")
{
   field(DESC, "$(BEAM) Beam off Time")
   field(DTYP, "Soft Timestamp")
   field(INP, "@%Y-%m-%dT%H:%M:%S")
   field(FLNK, "$(P)AC:$(BEAM):BEAM:STAT")
   field(PINI, "YES")
}

record(bi, "$(P)AC:$(BEAM):BEAM:STAT")
{
    field(DESC, "$(BEAM) Beam Status")
	field(INP, "$(P)AC:$(BEAM):BEAM:ONCALC2.D NPP")
	field(ZNAM, "OFF")
	field(ONAM, "ON")
	field(ZSV, "MINOR")
}

## is beam current value updating as regularly as it should?
## no might indicate a hang in the sending system
## will say True if beam is off as current will sit at 0 for some time then
record(bi, "$(P)AC:$(BEAM):UPDATING")
{
    field(DESC, "$(BEAM) Beam Updating")
	field(ZNAM, "NO")
	field(ONAM, "YES")
	field(ZSV, "MINOR")
}

## has beam current changed in last 30 seconds?
record(calcout, "$(P)AC:$(BEAM):BEAM:_UPDCALC")
{
	field(INPA, "$(P)AC:$(BEAM):BEAM:STAT NPP")
	field(INPB, "$(P)AC:$(BEAM):BEAMCH:ETIME NPP")
	field(INPC, "$(IOC):HEARTBEAT NPP")
	field(CALC, "A=0?1:(C-B<30?1:0)")
    field(OOPT,	"On Change")
	field(OUT, "$(P)AC:$(BEAM):UPDATING PP")
	field(SCAN, "10 second")
}
